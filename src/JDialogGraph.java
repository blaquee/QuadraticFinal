
import java.awt.*;
import javax.swing.*;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author glindor
 */
public class JDialogGraph extends javax.swing.JDialog
{

    //Our object with essential Quadratic numbers for calculations
    private Quadratic ourQuad;
    
    
    //This is our Graph Component, we draw the graph here.
    class JGraphComponent extends JPanel
    {
        
        private double a,b,c;
        
        public JGraphComponent()
        {
            a = JDialogGraph.this.ourQuad.getA();
            b = JDialogGraph.this.ourQuad.getB();
            c = JDialogGraph.this.ourQuad.getC();
        }
         
        public double getY(int x)
        {
            
            return (( a )* x * x + (b * x) + c);
        }

        @Override
        public void paintComponent(Graphics g)
        {
            super.paintComponent(g);
            
            //Draw the x and y axis
            g.setColor(Color.black);
            //x-axis
            g.drawLine(0, this.getHeight()/2, this.getWidth(), this.getHeight()/2);
            //y-axis
            g.drawLine(this.getWidth()/2, 0, this.getWidth()/2, this.getHeight());
            
            //This is our point of symmetry
            Point symmetry = JDialogGraph.this.ourQuad.calcVertex();
            
            
            //Calculate the shift for our graph, we need to graph it according to the modified origin
            int xshift = this.getWidth()/2;
            int yshift = this.getHeight()/2;
            
            //Set the graphs color to red
            g.setColor(Color.red);
            
            //Graph our equation with necessary calculations, we graph along the whole y-axis. why not.
            for (int x = (int)symmetry.getX()-this.getHeight()/2; x < (int)symmetry.getX()+this.getHeight()/2; ++x)
            {
                System.out.println("x = " + x);
                g.drawLine(x + xshift, (int)-getY(x) + yshift, x + 1 + xshift, (int)-getY(x + 1) + yshift);
                //System.out.printf("%d %d %d %d\n", x, getY(x), x + 1, getY(x + 1));
            }
            
            //System.out.println("Width = "+ this.getWidth() );
        }
    }

    /**
     * Creates new form JDialogGraph, gaining Quadratic object.
     */
    public JDialogGraph(java.awt.Frame parent, boolean modal, Quadratic q)
    {
        super(parent, modal);
        //Got our Quadratic class!
        ourQuad = q;
        initComponents();

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        JGraphComponent = new JGraphComponent();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Graph");
        setMaximumSize(new java.awt.Dimension(800, 640));
        setMinimumSize(new java.awt.Dimension(200, 200));
        setModal(true);

        org.jdesktop.layout.GroupLayout JGraphComponentLayout = new org.jdesktop.layout.GroupLayout(JGraphComponent);
        JGraphComponent.setLayout(JGraphComponentLayout);
        JGraphComponentLayout.setHorizontalGroup(
            JGraphComponentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        JGraphComponentLayout.setVerticalGroup(
            JGraphComponentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, JGraphComponent, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, JGraphComponent, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        JGraphComponent.getAccessibleContext().setAccessibleParent(null);

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
/*    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
    /*    try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(JDialogGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(JDialogGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(JDialogGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(JDialogGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
       /* java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                JDialogGraph dialog = new JDialogGraph(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e)
                    {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JGraphComponent;
    // End of variables declaration//GEN-END:variables
}
